// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Input;
RWTexture2D<float4> Output;

[numthreads(16,16,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{

    float4 k[3][3];
    for(int u = 0; u < 3; u++){
        for (int v = 0; v<3; v++){
            int2 xy = id.xy + int2(v-1,u-1);
            k[u][v] = Input[xy];
        }
    }

    float4 dx = -1.0f*k[0][0] - 2.0f*k[1][0] - 1.0f*k[2][0] + 1.0f*k[0][2] + 2.0f*k[1][2] + 1.0f*k[2][2];
    float4 dy = -1.0f*k[2][0] - 2.0f*k[2][1] - 1.0f*k[2][1] + 1.0f*k[0][0] + 2.0f*k[0][1] + 1.0f*k[0][2];

    float4 edgeStrength = sqrt(dx * dx + dy * dy);
    // Output[id.xy] = edgeStrength;
    Output[id.xy] = float4(1.0,0.0,0.0,1.0);
}
